{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","current","winner","moves","map","move","desc","key","jumpTo","status","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"uMAEe,SAASA,EAAOC,GAC7B,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,O,ICFQC,E,2KACNC,GAAI,IAAD,OACd,OACE,kBAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMtC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAEnB,yBAAKP,UAAU,aACdK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GA1BMC,aCAdC,E,kDAEnB,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IACDW,MAAQ,CACXC,QAAS,CACP,CAAEL,QAASM,MAAM,GAAGC,KAAK,QAE3BC,WAAY,EACZC,SAAS,GAPM,E,wDAWPX,GACV,IAAMO,EAAUN,KAAKK,MAAMC,QAAQK,MAAM,EAAGX,KAAKK,MAAMI,WAAa,GAE9DR,EADUK,EAAQA,EAAQM,OAAS,GACjBX,QAAQU,QAE5BE,EAAgBZ,IAAYA,EAAQF,KAIxCE,EAAQF,GAAKC,KAAKK,MAAMK,QAAU,IAAM,IACxCV,KAAKc,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CAAEd,aAC3BQ,WAAYH,EAAQM,OACpBF,SAAUV,KAAKK,MAAMK,a,6BAIlBM,GACLhB,KAAKc,SAAS,CACZL,WAAYO,EACZN,QAAUM,EAAO,IAAO,M,+BAIlB,IAAD,OACDV,EAAUN,KAAKK,MAAMC,QACrBW,EAAUX,EAAQN,KAAKK,MAAMI,YAC7BS,EAASL,EAAgBI,EAAQhB,SAEjCkB,EAAQb,EAAQc,KAAI,SAACJ,EAAMK,GAC/B,IAAMC,EAAOD,EAAI,sBAAkBA,GAAlB,mBACjB,OACE,wBAAIE,IAAKF,GACP,4BAAQzB,QAAS,kBAAM,EAAK4B,OAAOH,KAAQC,OAK3CG,EAASP,EAAM,kBAAcA,GAAd,uBAAyClB,KAAKK,MAAMK,QAAU,IAAM,KAEzF,OACE,yBAAKf,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACEM,QAASgB,EAAQhB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK2B,YAAY3B,OAGrC,yBAAKJ,UAAU,aACb,6BAAM8B,GACN,4BAAKN,S,GA/DmBhB,aAsElC,SAASU,EAAgBZ,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA5B,EAAI,EAAGA,EAAI4B,EAAMf,OAAQb,IAAK,CAAC,IAAD,cACnB4B,EAAM5B,GADa,GAC9B6B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KCtFTG,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6c69821c.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  )\n}","import React, { Component } from 'react'\nimport Square from './Square'\n\nexport default class Board extends Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n          <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport Board from './Board'\n\nexport default class Game extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      history: [\n        { squares: Array(9).fill(null) }\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\n    const current = history[history.length - 1]\n    const squares = current.squares.slice()\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{ squares }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    })\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    })\n  }\n\n  render() {\n    const history = this.state.history\n    const current = history[this.state.stepNumber]\n    const winner = calculateWinner(current.squares)\n\n    const moves = history.map((step, move) => {\n      const desc = move ? `Go to move #${move}` : `Go to game start`\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      )\n    })\n\n    const status = winner ? `Winner: ${winner}` : `Next player: ${this.state.xIsNext ? 'X' : 'O'}`\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i]\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/Game';\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}